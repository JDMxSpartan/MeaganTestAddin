function onMessageSendHandler(e){Promise.all([getToRecipientsAsync(),getSenderAsync(),getBodyAsync(),getCCAsync(),getBCCAsync()]).then((([t,n,o,r,s])=>{console.log("To recipients:"),t.forEach((e=>console.log(e.emailAddress))),console.log("Sender:"+n.displayName+" "+n.emailAddress),console.log("CC: "+r.emailAddress),console.log("BCC: "+s.emailAddress),console.log("Body:"+o),bannerNullHandler(getBannerFromBody(o),e)}))}function getBannerFromBody(e){const t=e.match(/^(TOP *SECRET|TS|SECRET|S|CONFIDENTIAL|C|UNCLASSIFIED|U)((\/\/)?(.*)?(\/\/)((.*)*))?/im);return console.log(t),t?(console.log("banner found"),t[0]):(console.log("banner null"),null)}function bannerNullHandler(e,t){null==e?t.completed({allowEvent:!1,cancelLabel:"Ok",commandId:"msgComposeOpenPaneButton",contextData:JSON.stringify({a:"aValue",b:"bValue"}),errorMessage:"Please enter a banner, banner error detected.",sendModeOverride:Office.MailboxEnums.SendModeOverride.PromptUser}):t.completed({allowEvent:!0})}function hasMatches(e){if(null==e||""==e)return!1;const t=["send","picture","document","attachment"];for(let n=0;n<t.length;n++){const o=t[n].trim();if(RegExp(o,"i").test(e))return!0}return!1}function getAttachmentsCallback(e){const t=e.asyncContext;if(e.value.length>0){for(let n=0;n<e.value.length;n++)if(0==e.value[n].isInline)return void t.completed({allowEvent:!0});t.completed({allowEvent:!1,errorMessage:"Looks like the body of your message includes an image or an inline file. Would you like to attach a copy of it to the message?",cancelLabel:"Attach a copy",commandId:"msgComposeOpenPaneButton",sendModeOverride:Office.MailboxEnums.SendModeOverride.PromptUser})}else t.completed({allowEvent:!1,errorMessage:"Looks like you're forgetting to include an attachment blayh blah testing.",cancelLabel:"Add an attachment",commandId:"msgComposeOpenPaneButton"})}function getToRecipientsAsync(){return new Promise(((e,t)=>{Office.context.mailbox.item.to.getAsync((n=>{n.status!==Office.AsyncResultStatus.Succeeded?(console.error("Failed to get 'To' recipients. Error: "+JSON.stringify(n.error)),t("Failed to get 'To' recipients.")):e(n.value)}))}))}function getSenderAsync(){return new Promise(((e,t)=>{Office.context.mailbox.item.from.getAsync((n=>{n.status!==Office.AsyncResultStatus.Succeeded?(console.log("unable to get sender"),t("Failed to get sender. "+JSON.stringify(n.error))):e(n.value)}))}))}function getBodyAsync(){return new Promise(((e,t)=>{Office.context.mailbox.item.body.getAsync(Office.CoercionType.Text,(n=>{n.status!==Office.AsyncResultStatus.Succeeded?(console.log("unable to get body"),t("Failed to get body. "+JSON.stringify(n.error))):e(n.value)}))}))}function getCCAsync(){return new Promise(((e,t)=>{Office.context.mailbox.item.cc.getAsync((n=>{n.status!==Office.AsyncResultStatus.Succeeded?(console.error("Failed to get 'CC' recipients. Error: "+JSON.stringify(n.error)),t("Failed to get 'CC' recipients.")):e(n.value)}))}))}function getBCCAsync(){return new Promise(((e,t)=>{Office.context.mailbox.item.bcc.getAsync((n=>{n.status!==Office.AsyncResultStatus.Succeeded?(console.error("Failed to get 'BCC' recipients. Error: "+JSON.stringify(n.error)),t("Failed to get 'BCC' recipients.")):e(n.value)}))}))}Office.context.platform!==Office.PlatformType.PC&&null!=Office.context.platform||Office.actions.associate("onMessageSendHandler",onMessageSendHandler);